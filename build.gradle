buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar.enabled = false

group 'com.procedure.scheduling'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    compileOnly("org.springframework.boot:spring-boot-devtools")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
    testCompile("org.mockito:mockito-core:2.19.0")
    testCompile("com.h2database:h2:1.4.197")

    compile("io.springfox:springfox-swagger2:2.9.2")
    compile("io.springfox:springfox-swagger-ui:2.9.2")
    compile("org.projectlombok:lombok:1.18.0")
    compile("org.jetbrains:annotations:16.0.2")

    compile("org.apache.tomcat.embed:tomcat-embed-jasper:9.0.10")
    compile("org.glassfish.web:javax.servlet.jsp.jstl:1.2.4")
    compile("jstl:jstl:1.2")

    compile("org.flywaydb:flyway-core:4.2.0")
    compile("org.postgresql:postgresql:42.2.2")
}

task copyDockerfileToLibs(type: Copy) {
    from 'src/docker'
    into 'build/libs/'
}

task buildDockerImage(type: Exec) {
    workingDir 'build/libs/'
    commandLine 'docker', 'build', '-t', 'sergeymaletsky/' + project.name, '.'
    dependsOn build
    dependsOn copyDockerfileToLibs
    mustRunAfter build
    mustRunAfter copyDockerfileToLibs
}

task pushDockerImage(type: Exec) {
    commandLine 'docker', 'push', 'sergeymaletsky/' + project.name
    dependsOn buildDockerImage
    mustRunAfter buildDockerImage
}